# Nginx Configuration for Hostinger aaPanel
# Path: /www/server/panel/vhost/nginx/<domain>.conf
# Replace <FRONTEND_DOMAIN> with your actual domain (e.g., aashish.posttrr.com)

server {
    listen 80;
    listen 443 ssl http2;
    server_name <FRONTEND_DOMAIN>;

    # Document root pointing to built React app
    root /www/wwwroot/<project>/client/dist;
    index index.html index.htm;

    # HTTP to HTTPS redirect (if SSL is enabled)
    if ($server_port !~ 443) {
        rewrite ^(/.*)$ https://$host$1 permanent;
    }

    # SSL certificates (managed by aaPanel)
    ssl_certificate       /www/server/panel/vhost/cert/<FRONTEND_DOMAIN>/fullchain.pem;
    ssl_certificate_key   /www/server/panel/vhost/cert/<FRONTEND_DOMAIN>/privkey.pem;
    
    # SSL settings
    ssl_protocols         TLSv1.2 TLSv1.3;
    ssl_ciphers           HIGH:!aNULL:!MD5;

    # API reverse proxy to Node.js backend on port 8003
    location /api/ {
        proxy_pass         http://127.0.0.1:8003/;
        proxy_http_version 1.1;
        proxy_set_header   Upgrade $http_upgrade;
        proxy_set_header   Connection "upgrade";
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        
        # CORS headers (backup - should be handled by Express)
        add_header 'Access-Control-Allow-Origin' '$http_origin' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Handle preflight OPTIONS requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '$http_origin' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain';
            return 200;
        }
    }

    # React Router SPA fallback - serve index.html for all routes
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Increase upload size for file uploads
    client_max_body_size 20m;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json;

    # Error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /index.html;
}
